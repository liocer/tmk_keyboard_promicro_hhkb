diff --git a/keyboard/hhkb/hhkb_avr.h b/keyboard/hhkb/hhkb_avr.h
index 7ea6322..85b39ce 100644
--- a/keyboard/hhkb/hhkb_avr.h
+++ b/keyboard/hhkb/hhkb_avr.h
@@ -36,42 +36,34 @@
  * power:   PD4(L:off/H:on)
  * row-ext: PC6,7 for HHKB JP(active low)
  */
+
+/*
+ * For TMK HHKB alt controller(ATMega32U4)
+ *
+ * row:     PB0-2
+ * col:     PB3-5,6
+ * key:     PD0(pull-uped)
+ * prev:    PD1
+ * power:   PD4(L:off/H:on) - not used
+ * row-ext: PC6,7 for HHKB JP(active low)
+ */
 static inline void KEY_ENABLE(void) { (PORTB &= ~(1<<6)); }
 static inline void KEY_UNABLE(void) { (PORTB |=  (1<<6)); }
-static inline bool KEY_STATE(void) { return (PIND & (1<<7)); }
-static inline void KEY_PREV_ON(void) { (PORTB |=  (1<<7)); }
-static inline void KEY_PREV_OFF(void) { (PORTB &= ~(1<<7)); }
-#ifdef HHKB_POWER_SAVING
-static inline void KEY_POWER_ON(void) {
-    DDRB = 0xFF; PORTB = 0x40;          // change pins output
-    DDRD |= (1<<4); PORTD |= (1<<4);    // MOS FET switch on
-    /* Without this wait you will miss or get false key events. */
-    _delay_ms(5);                       // wait for powering up
-}
-static inline void KEY_POWER_OFF(void) {
-    /* input with pull-up consumes less than without it when pin is open. */
-    DDRB = 0x00; PORTB = 0xFF;          // change pins input with pull-up
-    DDRD |= (1<<4); PORTD &= ~(1<<4);   // MOS FET switch off
-}
-static inline bool KEY_POWER_STATE(void) { return PORTD & (1<<4); }
-#else
+static inline bool KEY_STATE(void) { return (PIND & (1<<0)); }
+static inline void KEY_PREV_ON(void) { (PORTD |=  (1<<1)); }
+static inline void KEY_PREV_OFF(void) { (PORTD &= ~(1<<1)); }
 static inline void KEY_POWER_ON(void) {}
 static inline void KEY_POWER_OFF(void) {}
 static inline bool KEY_POWER_STATE(void) { return true; }
-#endif
 static inline void KEY_INIT(void)
 {
     /* row,col,prev: output */
     DDRB  = 0xFF;
     PORTB = 0x40;   // unable
-    /* key: input with pull-up */
-    DDRD  &= ~0x80;
-    PORTD |=  0x80;
-#ifdef HHKB_JP
-    /* row extention for HHKB JP */
-    DDRC  |= (1<<6|1<<7);
-    PORTC |= (1<<6|1<<7);
-#endif
+    // I've put the following on PD0 and PD1
+    DDRD |= (1<<1);
+    DDRD &= ~(1<<0);
+    PORTD |= (1<<0);
     KEY_UNABLE();
     KEY_PREV_OFF();
 
@@ -80,10 +72,6 @@ static inline void KEY_INIT(void)
 static inline void KEY_SELECT(uint8_t ROW, uint8_t COL)
 {
     PORTB = (PORTB & 0xC0) | (((COL) & 0x07)<<3) | ((ROW) & 0x07);
-#ifdef HHKB_JP
-    if ((ROW) & 0x08) PORTC = (PORTC & ~(1<<6|1<<7)) | (1<<6);
-    else              PORTC = (PORTC & ~(1<<6|1<<7)) | (1<<7);
-#endif
 }
 
 
